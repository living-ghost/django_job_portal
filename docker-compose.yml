version: '3.8'

services:
  django:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: django_app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DEBUG: ${DEBUG}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${EMAIL_HOST_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8089:80"
    depends_on:
      - db

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  celery:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: celery_worker
    command: celery -A job_portal worker --pool=solo -l info
    depends_on:
      - rabbitmq
    volumes:
      - .:/app
    environment:
      CELERY_BROKER_URL: 'pyamqp://guest@localhost//'
      CELERY_ACCEPT_CONTENT: 'application/json'
      CELERY_RESULT_SERIALIZER: 'json'
      CELERY_TASK_SERIALIZER: 'json'
      CELERY_TIMEZONE: 'Asia/Kolkata'
      CELERY_RESULT_BACKEND: 'rpc://'

  flower:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: celery_flower
    command: celery -A job_portal flower
    depends_on:
      - rabbitmq
    ports:
      - "5555:5555"
    environment:
      FLOWER_BROKER_URL: pyamqp://guest:guest@rabbitmq//  # Update this if you have different settings

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3002:3000"
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  pgdata:
  grafana-storage: