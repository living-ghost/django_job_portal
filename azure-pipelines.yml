<<<<<<< HEAD
=======
# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

>>>>>>> bfc33bdf815cf06ddbe293e7d6ecdbffe4d8deb8
trigger:
- master

resources:
- repo: self

variables:
<<<<<<< HEAD
  dockerRegistryServiceConnection: 'd932d5a2-7e91-48b9-b339-918c998b3ae9'
  containerRegistry: 'freshersparkregistry.azurecr.io'
  
  # Django app variables
  djangoImageRepository: 'django'
  djangoDockerfilePath: '$(Build.SourcesDirectory)/Dockerfile.django'

  tag: '$(Build.BuildId)'
=======
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '0b43ff74-f748-4652-96b5-badfcc4eb684'
  imageRepository: 'celery'
  containerRegistry: 'freshersparkregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile.celery'
  tag: '$(Build.BuildId)'

  # Agent VM image name
>>>>>>> bfc33bdf815cf06ddbe293e7d6ecdbffe4d8deb8
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
<<<<<<< HEAD
  - job: BuildImages
    displayName: Build Docker Images
    pool:
      vmImage: $(vmImageName)
    steps:
    
    # First collect static files (required for both containers)
    - script: |
        pip install -r requirements.txt
        python manage.py collectstatic --noinput
      displayName: 'Collect static files'
      workingDirectory: '$(Build.SourcesDirectory)'
    
     
    - task: Docker@2
      displayName: Build and push Django image
      inputs:
        command: buildAndPush
        repository: $(djangoImageRepository)
        dockerfile: $(djangoDockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
        buildContext: '$(Build.SourcesDirectory)'
=======
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
>>>>>>> bfc33bdf815cf06ddbe293e7d6ecdbffe4d8deb8
