trigger:
- master

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'd932d5a2-7e91-48b9-b339-918c998b3ae9'
  containerRegistry: 'freshersparkregistry.azurecr.io'
  
  # Image repositories
  celeryImageRepository: 'freshersparkcelery'
  celeryDockerfilePath: '$(Build.SourcesDirectory)/Dockerfile.celery'
  
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push Celery image
  jobs:
  - job: BuildCelery
    displayName: Build Celery Image
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push Celery image
      inputs:
        command: buildAndPush
        repository: $(celeryImageRepository)
        dockerfile: $(celeryDockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest
        buildContext: '$(Build.SourcesDirectory)'

- stage: Deploy
  displayName: Deploy Celery Worker
  dependsOn: Build
  jobs:
  - job: DeployCelery
    displayName: Deploy Celery Worker
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: AzureCLI@2
      displayName: 'Update Celery Worker Configuration'
      inputs:
        azureSubscription: '8ce37efe-06df-47c4-b146-001d3ddfb1ba'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Get current configuration
          az containerapp show \
            --name freshersparkapp \
            --resource-group freshersparkresource \
            --output yaml > config.yaml
          
          # Update Celery container configuration
          yq e -i '(.properties.template.containers[] | select(.name == "celery-worker").image) = "'"${{variables.containerRegistry}}"'/'"${{variables.celeryImageRepository}}"':'"${{variables.tag}}"'"' config.yaml
          
          # Apply updated configuration
          az containerapp update \
            --name freshersparkapp \
            --resource-group freshersparkresource \
            --yaml config.yaml
          
          # Get latest revision name
          LATEST_REVISION=$(az containerapp revision list \
            --name freshersparkapp \
            --resource-group freshersparkresource \
            --query "[?properties.active].name" -o tsv | head -1)
          
          echo "Restarting revision: $LATEST_REVISION"
          az containerapp revision restart \
            --name freshersparkapp \
            --resource-group freshersparkresource \
            --revision $LATEST_REVISION