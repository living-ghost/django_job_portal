trigger:
- master

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'd932d5a2-7e91-48b9-b339-918c998b3ae9'
  containerRegistry: 'freshersparkregistry.azurecr.io'
  
  # Django app variables
  djangoImageRepository: 'freshersparkimg'
  djangoDockerfilePath: '$(Build.SourcesDirectory)/Dockerfile.django'
  
  # Nginx app variables
  nginxImageRepository: 'freshersparknginximg'
  nginxDockerfilePath: '$(Build.SourcesDirectory)/Dockerfile.nginx'
  
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: BuildImages
    displayName: Build Docker Images
    pool:
      vmImage: $(vmImageName)
    steps:
    
    # First collect static files (required for both containers)
    - script: |
        python manage.py collectstatic --noinput
        ls -la staticfiles/  # Verify files were collected
      displayName: 'Collect static files'
      workingDirectory: '$(Build.SourcesDirectory)'
    
    # ---- Django Image Build (Commented out) ----
    # - task: Docker@2
    #   displayName: Build and push Django image
    #   inputs:
    #     command: buildAndPush
    #     repository: $(djangoImageRepository)
    #     dockerfile: $(djangoDockerfilePath)
    #     containerRegistry: $(dockerRegistryServiceConnection)
    #     tags: |
    #       $(tag)
    #     buildContext: '$(Build.SourcesDirectory)'

    # ---- Nginx Image Build (Active) ----
    - task: Docker@2
      displayName: Build and push Nginx image
      inputs:
        command: buildAndPush
        repository: $(nginxImageRepository)
        dockerfile: $(nginxDockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
        buildContext: '$(Build.SourcesDirectory)'